apply plugin: 'com.android.application'
apply plugin: 'dexguard'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "sg.omi"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName "1.0.0"
        versionCode 1
    }
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
    }

    flavorDimensions "demo"
    productFlavors {
        beijing {
            dimension "demo"
        }
    }

    signingConfigs {
        release {
            storeFile file("../../keystore/test.keystore")
            storePassword "test123456"
            keyAlias "test"
            keyPassword "test123456"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultDexGuardFile('dexguard-release.pro'), 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // the following aars are also compiled in host project, so they will be filterd when build plugin apk.
    // but, wo can still visit their Class and Resources.
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.tantan.library.virtualapk.xinyuan:core:0.0.5-SNAPSHOT'
}

apply plugin: 'com.didi.virtualapk.plugin'

virtualApk {
    packageId = 0x6f // the package id of Resources.
    targetHost = '../../VirtualAPK/app' // the path of application module in host project.
    applyHostMapping = true //optional, default value: true.
}